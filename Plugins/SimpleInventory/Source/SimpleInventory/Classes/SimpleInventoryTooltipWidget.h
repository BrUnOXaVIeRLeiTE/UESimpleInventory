//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////
///			Copyright 2021 (C) Bruno Xavier Leite
//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include "SimpleInventory.h"

#include "Runtime/UMG/Public/UMG.h"
#include "Runtime/UMG/Public/Components/Image.h"
#include "Runtime/UMG/Public/Components/Border.h"
#include "Runtime/UMG/Public/Components/TextBlock.h"

#include "Runtime/UMG/Public/Blueprint/UserWidget.h"

#include "SimpleInventoryTooltipWidget.generated.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

UCLASS()
class SIMPLEINVENTORY_API USimpleInventoryTooltipWidget : public UUserWidget {
	GENERATED_BODY()
public:
	USimpleInventoryTooltipWidget(const FObjectInitializer &Initializer);
	virtual ~USimpleInventoryTooltipWidget();
protected:
	virtual void NativeConstruct() override;
protected:
	UPROPERTY(meta=(BindWidget))
	UBorder* Background;
	//
	UPROPERTY(meta=(BindWidget))
	UImage* ItemBanner;
	//
	UPROPERTY(meta=(BindWidget))
	UTextBlock* ItemName;
	//
	UPROPERTY(meta=(BindWidget))
	UTextBlock* ItemDescription;
public:
	UPROPERTY(Category="Inventory", BlueprintSetter=SetItemReference, EditAnywhere, BlueprintReadWrite)
	USimpleInventoryItem* Item;
public:
	UFUNCTION(Category="Inventory", BlueprintCallable)
	void Reconstruct();
public:
	UFUNCTION(BlueprintSetter)
	void SetItemReference(USimpleInventoryItem* NewItem);
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////